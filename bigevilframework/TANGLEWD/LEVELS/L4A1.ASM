;==============================================================
;   TANGLEWOOD - A game by Matt Phillips - (c) 2017
;==============================================================
;   http://www.bigevilcorporation.co.uk
;==============================================================
;   l4a1.asm - Level 4 - Tethered Act 1
;==============================================================	

; ************************************
; Static data
; ************************************
l4a1_TetheredAct1:

	dc.l LevelSelect_Str_04				; Name
	dc.l LevelData_L4A1					; Userdata
	dc.l tiles_l4						; Tileset
	dc.l map_blocks_l4a1				; Blocks
	dc.l map_blockmap_l4a1				; Block map
	dc.l collisiontiles_l4				; Collision tileset
	dc.l collisionmap_blocks_l4a1		; Collision blocks
	dc.l collisionmap_blockmap_l4a1		; Collision block map
	dc.l 0x00000000						; 'Special' terrain descriptor table
	dc.l l4a1_DefaultPalettes			; Palettes
	dc.l l4a1_Init						; Init routine
	dc.l l4a1_Update					; Update routine
	dc.l l4a1_Serialise					; Serialise routine
	dc.l l4a1_LoadGameObjects			; Load game objects routine
	dc.l l4a1_End						; End routine
	IF INCLUDE_LEVEL_5
	dc.l L5a1_BygoneAct1				; Next level
	ELSE
	dc.l 0x00000000
	ENDIF
	dc.l DefaultGravity					; Default gravity
	dc.w map_l4a1_width					; Map width (tiles)
	dc.w map_l4a1_height				; Map height (tiles)
	dc.w map_blockmap_l4a1_width		; Map width (blocks)
	dc.w map_blockmap_l4a1_height		; Map height (blocks)
	dc.w tiles_l4_size_t				; Num tiles
	dc.w 0x0000							; Num 'special' terrain descriptors
	
	even
	
l4a1_DefaultPalettes:

	dc.l palette_l4					; World
	dc.l 0x0						; Djakk (black by default, fades up when approached)
	dc.l palette_fuzzl				; Fuzzl
	dc.l Pal_Nymn_Red				; Player
	
	even
	
; ************************************
; Runtime data
; ************************************
	rsset LevelData_Struct_Size
l4a1Data_WaitingInput			rs.b 1
;---------------------------------
l4a1Data_Struct_Pad      		rs.b 3
l4a1Data_Struct_Size     		rs.b 0
	
l4a1_Init:

	; Set data for all acts in level
	lea    CurrentActDatas, a2
	move.l #LevelData_L4A1, (a2)+
	;move.l #LevelData_L4A2, (a2)+
	;move.l #LevelData_L4A3, (a2)+
	move.w #0x1, CurrentLevelNumActs
	
	; Load BG map
	lea    map_blocks_l4bg, a0
	lea    map_blockmap_l4bg, a1
	move.l #(map_blockmap_l4bg_width<<16)|map_blockmap_l4bg_height, d1
	move.w (vram_addr_leveltiles), d2
	divu   #size_tile_b, d2
	move.l #PaletteId_World0, d3
	jsr    VDP_LoadBlockMapPlaneB

	; Set TOD
	move.b  #TimeOfDay_Day, TimeOfDay

	;==============================================================

	; Load scene animations
	jsr    l4_LoadSceneAnimations
	
	;==============================================================
	
	move.l (Player1), a0
	
	; Disable player 1 control
	move.b #0x0, Player_ControlEnabled(a0)
	
	; Start sleep anim
	move.l a0, a1
	add.l  #Player_Animations, a1
	move.l #(PlayerAnimIdx_Sleep*Animation_Struct_Size), d1
	add.l  d1, a1
	jsr    AnimObjSetAnimation
	
	; Take control of anim updates
	move.b #0x0, Character_UpdateAnim(a0)
	
	move.l #LevelData_L1A1, a2
	move.b #0x1, l4a1Data_WaitingInput(a2)
	
	rts
	
l4a1_Update:

	move.l #LevelData_L1A1, a2
	
	; Check waiting for input
	move.l #LevelData_L1A1, a2
	cmp.b #0x0, l4a1Data_WaitingInput(a2)
	beq    @FinishedLevelStartSequence
	
	; Read pad
	jsr    PAD_ReadPadA
	
	; Check for input
	andi.w #(pad_button_a|pad_button_b|pad_button_c), d0
	cmp.w  #0x0, d0
	beq   @NoInput
	
	; Start wake up sequence
	PUSHL  a1
	PUSHL  a2
	move.l (Player1), a0
	move.l a0, a1
	add.l  #Player_Animations, a1
	move.l #(PlayerAnimIdx_Wake*Animation_Struct_Size), d1
	add.l  d1, a1
	jsr    AnimObjSetAnimation
	POPL   a2
	POPL   a1

	move.l (Player1), a0
	
	; Enable player 1 control
	move.b #0x1, Player_ControlEnabled(a0)
	
	; Release animation control
	move.b #0x1, Character_UpdateAnim(a0)
	
	; Done
	move.b #0x0, l4a1Data_WaitingInput(a2)
	
	@FinishedLevelStartSequence:
	@NoInput:

	rts
	
l4a1_Serialise:
	; a1 --- Level addr
	; a3 --- Stream ptr
	; d1 (b) Direction (serialise_dir_in/serialise_dir_out)
	
	rts

l4a1_End:
	rts
	
l4a1_Trigger_End:

	; Begin end of act gamestate
	lea    GameStateEndAct, a0
	jsr    GameStateEnter
	
	rts
