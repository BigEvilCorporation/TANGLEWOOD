; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   **AUTOGENERATED WITH BEEHIVE** - the complete art tool for SEGA Mega Drive
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   http://www.bigevilcorporation.co.uk
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   Beehive and SEGA Genesis Framework (c) Matt Phillips 2015
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==


L7A3_Leaf_count equ 0x0

L7A3_Djubb_count equ 0x0

L7A3_Echo_count equ 0x1
L7A3_Echo_1_idx	equ 0x0

	IFND FINAL
L7A3_Echo_1_name	dc.b "L7A3_Echo_1",0
	even
	ENDIF

L7A3_Nymn_count equ 0x0

L7A3_BouncePlant_count equ 0x0

L7A3_Log_count equ 0x0

L7A3_DjakkCage_count equ 0x0

L7A3_Monster_count equ 0x0

L7A3_Boulder_count equ 0x0

L7A3_Firefly_count equ 0x0

L7A3_FuzzlCage_count equ 0x0

L7A3_Fuzzl_count equ 0x0

L7A3_Stone_count equ 0x0

L7A3_Nest_count equ 0x0

L7A3_Flue_count equ 0x0

L7A3_TriggerBox_count equ 0x0

L7A3_Checkpoint_count equ 0x0

L7A3_WaterBody_count equ 0x0

L7A3_Location_count equ 0x0

L7A3_Deathbox_count equ 0x0

L7A3_Lift_count equ 0x0

L7A3_Crate_count equ 0x0

L7A3_Generator_count equ 0x0

L7A3_Cogs_count equ 0x0

L7A3_Bridge_count equ 0x0

L7A3_Button_count equ 0x0

L7A3_Wyrm_count equ 0x0

L7A3_AIMarker_count equ 0x0

L7A3_Cart_count equ 0x0

L7A3_Pillar_count equ 0x0

L7A3_Winch_count equ 0x0

L7A3_WindFlue_count equ 0x0

L7A3_Raft_count equ 0x0

L7A3_Lock_count equ 0x0

L7A3_Pool_count equ 0x0

L7A3_Ladder_count equ 0x0

L7A3_Demon_count equ 0x0

L7A3_Borgus_count equ 0x0

L7A3_Stalactite_count equ 0x0



L7A3_LoadGameObjects:


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Echo_Struct_Size*L7A3_Echo_count)
	move.l a1, EntityPoolStart_Echo
	move.l a1, a0
	POPL   a1

	jsr EchoInit
	move.l #0x00a00000, Entity_WorldPosX(a0)
	move.l #0x01280000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L7A3_Echo_1_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xb, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr EchoLoadGfx
	add.l #Echo_Struct_Size, a0





































	rts

