; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   **AUTOGENERATED WITH BEEHIVE** - the complete art tool for SEGA Mega Drive
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   http://www.bigevilcorporation.co.uk
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   Beehive and SEGA Genesis Framework (c) Matt Phillips 2015
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==


L8A1_Leaf_count equ 0x0

L8A1_Trap_count equ 0x0

L8A1_Djubb_count equ 0x0

L8A1_Echo_count equ 0x1
L8A1_Echo_1_idx	equ 0x0

	IFND FINAL
L8A1_Echo_1_name	dc.b "L8A1_Echo_1",0
	even
	ENDIF

L8A1_Nymn_count equ 0x0

L8A1_BouncePlant_count equ 0x0

L8A1_Log_count equ 0x1
L8A1_Log_6_idx	equ 0x0

	IFND FINAL
L8A1_Log_6_name	dc.b "L8A1_Log_6",0
	even
	ENDIF

L8A1_Borgus_count equ 0x0

L8A1_DjakkCage_count equ 0x0

L8A1_Monster_count equ 0x0

L8A1_Boulder_count equ 0x0

L8A1_Firefly_count equ 0x0

L8A1_FuzzlCage_count equ 0x0

L8A1_Fuzzl_count equ 0x1
L8A1_FuzzlWhite_idx	equ 0x0

	IFND FINAL
L8A1_FuzzlWhite_name	dc.b "L8A1_FuzzlWhite",0
	even
	ENDIF

L8A1_Stone_count equ 0x1
L8A1_Stone_7_idx	equ 0x0

	IFND FINAL
L8A1_Stone_7_name	dc.b "L8A1_Stone_7",0
	even
	ENDIF

L8A1_Demon_count equ 0x0

L8A1_Nest_count equ 0x1
L8A1_Nest_3_idx	equ 0x0

	IFND FINAL
L8A1_Nest_3_name	dc.b "L8A1_Nest_3",0
	even
	ENDIF

L8A1_Flue_count equ 0x0

L8A1_TriggerBox_count equ 0x1
L8A1_TriggerLevelEnd_idx	equ 0x0

	IFND FINAL
L8A1_TriggerLevelEnd_name	dc.b "L8A1_TriggerLevelEnd",0
	even
	ENDIF

L8A1_Checkpoint_count equ 0x0

L8A1_WaterBody_count equ 0x0

L8A1_Location_count equ 0x0

L8A1_Lift_count equ 0x0

L8A1_Deathbox_count equ 0x0

L8A1_Crate_count equ 0x0

L8A1_Generator_count equ 0x0

L8A1_Cogs_count equ 0x0

L8A1_Bridge_count equ 0x0

L8A1_Button_count equ 0x0

L8A1_Wyrm_count equ 0x1
L8A1_Wyrm_5_idx	equ 0x0

	IFND FINAL
L8A1_Wyrm_5_name	dc.b "L8A1_Wyrm_5",0
	even
	ENDIF

L8A1_AIMarker_count equ 0x0

L8A1_Cart_count equ 0x0

L8A1_Pillar_count equ 0x0

L8A1_Winch_count equ 0x0

L8A1_WindFlue_count equ 0x0

L8A1_Raft_count equ 0x0

L8A1_Lock_count equ 0x0

L8A1_Pool_count equ 0x0

L8A1_Ladder_count equ 0x0

L8A1_Stalactite_count equ 0x0

L8A1_CargoLift_count equ 0x0

L8A1_Scrap_count equ 0x0



L8A1_LoadGameObjects:



	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Echo_Struct_Size*L8A1_Echo_count)
	move.l a1, EntityPoolStart_Echo
	move.l a1, a0
	POPL   a1

	jsr EchoInit
	move.l #0x00980000, Entity_WorldPosX(a0)
	move.l #0x00b00000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A1_Echo_1_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xb, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr EchoLoadGfx
	add.l #Echo_Struct_Size, a0



	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Log_Struct_Size*L8A1_Log_count)
	move.l a1, EntityPoolStart_Log
	move.l a1, a0
	POPL   a1

	jsr LogInit
	move.l #0x0ff00000, Entity_WorldPosX(a0)
	move.l #0x01e80000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A1_Log_6_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xa, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr LogLoadGfx
	add.l #Log_Struct_Size, a0







	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Fuzzl_Struct_Size*L8A1_Fuzzl_count)
	move.l a1, EntityPoolStart_Fuzzl
	move.l a1, a0
	POPL   a1

	jsr FuzzlInit
	move.l #0x09680000, Entity_WorldPosX(a0)
	move.l #0x00f80000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A1_FuzzlWhite_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xf, d0
	MEMCPYB a2,a3,d0
	ENDIF
	move.b #ColourWhite, Fuzzl_Colour(a0)
	jsr FuzzlLoadGfx
	add.l #Fuzzl_Struct_Size, a0

	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Stone_Struct_Size*L8A1_Stone_count)
	move.l a1, EntityPoolStart_Stone
	move.l a1, a0
	POPL   a1

	jsr StoneInit
	move.l #0x0f900000, Entity_WorldPosX(a0)
	move.l #0x02100000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A1_Stone_7_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xc, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr StoneLoadGfx
	add.l #Stone_Struct_Size, a0


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Nest_Struct_Size*L8A1_Nest_count)
	move.l a1, EntityPoolStart_Nest
	move.l a1, a0
	POPL   a1

	jsr NestInit
	move.l #0x0a400000, Entity_WorldPosX(a0)
	move.l #0x02980000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A1_Nest_3_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xb, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr NestLoadGfx
	add.l #Nest_Struct_Size, a0


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(TriggerBox_Struct_Size*L8A1_TriggerBox_count)
	move.l a1, EntityPoolStart_TriggerBox
	move.l a1, a0
	POPL   a1

	jsr TriggerBoxInit
	move.l #0x12a80000, Entity_WorldPosX(a0)
	move.l #0x02380000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A1_TriggerLevelEnd_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0x10, d0
	MEMCPYB a2,a3,d0
	ENDIF
	move.l #l7a2_Trigger_End, TriggerBox_Routine(a0)
	move.b #0x1, TriggerBox_TriggerOnce(a0)
	jsr TriggerBoxLoadGfx
	add.l #TriggerBox_Struct_Size, a0











	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Wyrm_Struct_Size*L8A1_Wyrm_count)
	move.l a1, EntityPoolStart_Wyrm
	move.l a1, a0
	POPL   a1

	jsr WyrmInit
	move.l #0x00e80000, Entity_WorldPosX(a0)
	move.l #0x00d00000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A1_Wyrm_5_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xb, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr WyrmLoadGfx
	add.l #Wyrm_Struct_Size, a0













	rts

