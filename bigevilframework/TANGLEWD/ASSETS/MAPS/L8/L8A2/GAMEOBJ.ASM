; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   **AUTOGENERATED WITH BEEHIVE** - the complete art tool for SEGA Mega Drive
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   http://www.bigevilcorporation.co.uk
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   Beehive and SEGA Genesis Framework (c) Matt Phillips 2015
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==


L8A2_Leaf_count equ 0x0

L8A2_Trap_count equ 0x0

L8A2_Djubb_count equ 0x4
L8A2_Djubb_4_idx	equ 0x0
L8A2_Djubb_5_idx	equ 0x1
L8A2_Djubb_6_idx	equ 0x2
L8A2_Djubb_7_idx	equ 0x3

	IFND FINAL
L8A2_Djubb_4_name	dc.b "L8A2_Djubb_4",0
L8A2_Djubb_5_name	dc.b "L8A2_Djubb_5",0
L8A2_Djubb_6_name	dc.b "L8A2_Djubb_6",0
L8A2_Djubb_7_name	dc.b "L8A2_Djubb_7",0
	even
	ENDIF

L8A2_Echo_count equ 0x1
L8A2_Echo_1_idx	equ 0x0

	IFND FINAL
L8A2_Echo_1_name	dc.b "L8A2_Echo_1",0
	even
	ENDIF

L8A2_Nymn_count equ 0x0

L8A2_BouncePlant_count equ 0x0

L8A2_Log_count equ 0x0

L8A2_Borgus_count equ 0x0

L8A2_DjakkCage_count equ 0x0

L8A2_Monster_count equ 0x1
L8A2_Djakk1_idx	equ 0x0

	IFND FINAL
L8A2_Djakk1_name	dc.b "L8A2_Djakk1",0
	even
	ENDIF

L8A2_Boulder_count equ 0x0

L8A2_Firefly_count equ 0x0

L8A2_FuzzlCage_count equ 0x0

L8A2_Fuzzl_count equ 0x0

L8A2_Stone_count equ 0x0

L8A2_Demon_count equ 0x0

L8A2_Nest_count equ 0x0

L8A2_Flue_count equ 0x0

L8A2_TriggerBox_count equ 0x2
L8A2_TriggerLevelEnd_idx	equ 0x0
L8A2_TriggerDjakk_idx	equ 0x1

	IFND FINAL
L8A2_TriggerLevelEnd_name	dc.b "L8A2_TriggerLevelEnd",0
L8A2_TriggerDjakk_name	dc.b "L8A2_TriggerDjakk",0
	even
	ENDIF

L8A2_Checkpoint_count equ 0x0

L8A2_WaterBody_count equ 0x0

L8A2_Location_count equ 0x0

L8A2_Lift_count equ 0x0

L8A2_Deathbox_count equ 0x0

L8A2_Crate_count equ 0x0

L8A2_Generator_count equ 0x0

L8A2_Cogs_count equ 0x0

L8A2_Bridge_count equ 0x0

L8A2_Button_count equ 0x0

L8A2_Wyrm_count equ 0x0

L8A2_AIMarker_count equ 0x0

L8A2_Cart_count equ 0x0

L8A2_Pillar_count equ 0x0

L8A2_Winch_count equ 0x0

L8A2_WindFlue_count equ 0x0

L8A2_Raft_count equ 0x0

L8A2_Lock_count equ 0x0

L8A2_Pool_count equ 0x0

L8A2_Ladder_count equ 0x0

L8A2_Stalactite_count equ 0x0

L8A2_CargoLift_count equ 0x0

L8A2_Scrap_count equ 0x0



L8A2_LoadGameObjects:


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Djubb_Struct_Size*L8A2_Djubb_count)
	move.l a1, EntityPoolStart_Djubb
	move.l a1, a0
	POPL   a1

	jsr DjubbInit
	move.l #0x05f80000, Entity_WorldPosX(a0)
	move.l #0x04780000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A2_Djubb_4_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xc, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr DjubbLoadGfx
	add.l #Djubb_Struct_Size, a0
	jsr DjubbInit
	move.l #0x05f00000, Entity_WorldPosX(a0)
	move.l #0x04d00000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A2_Djubb_5_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xc, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr DjubbLoadGfx
	add.l #Djubb_Struct_Size, a0
	jsr DjubbInit
	move.l #0x03780000, Entity_WorldPosX(a0)
	move.l #0x04680000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A2_Djubb_6_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xc, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr DjubbLoadGfx
	add.l #Djubb_Struct_Size, a0
	jsr DjubbInit
	move.l #0x04880000, Entity_WorldPosX(a0)
	move.l #0x04900000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A2_Djubb_7_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xc, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr DjubbLoadGfx
	add.l #Djubb_Struct_Size, a0

	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Echo_Struct_Size*L8A2_Echo_count)
	move.l a1, EntityPoolStart_Echo
	move.l a1, a0
	POPL   a1

	jsr EchoInit
	move.l #0x05100000, Entity_WorldPosX(a0)
	move.l #0x00800000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A2_Echo_1_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xb, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr EchoLoadGfx
	add.l #Echo_Struct_Size, a0






	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Monster_Struct_Size*L8A2_Monster_count)
	move.l a1, EntityPoolStart_Monster
	move.l a1, a0
	POPL   a1

	jsr MonsterInit
	move.l #0x02300000, Entity_WorldPosX(a0)
	move.l #0x06280000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A2_Djakk1_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xb, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr MonsterLoadGfx
	add.l #Monster_Struct_Size, a0









	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(TriggerBox_Struct_Size*L8A2_TriggerBox_count)
	move.l a1, EntityPoolStart_TriggerBox
	move.l a1, a0
	POPL   a1

	jsr TriggerBoxInit
	move.l #0x00e00000, Entity_WorldPosX(a0)
	move.l #0x06d00000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A2_TriggerLevelEnd_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0x10, d0
	MEMCPYB a2,a3,d0
	ENDIF
	move.l #l8a2_Trigger_End, TriggerBox_Routine(a0)
	move.b #0x1, TriggerBox_TriggerOnce(a0)
	jsr TriggerBoxLoadGfx
	add.l #TriggerBox_Struct_Size, a0
	jsr TriggerBoxInit
	move.l #0x02b00000, Entity_WorldPosX(a0)
	move.l #0x06080000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L8A2_TriggerDjakk_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0x10, d0
	MEMCPYB a2,a3,d0
	ENDIF
	move.l #l8a2_Trigger_Djakk, TriggerBox_Routine(a0)
	move.b #0x1, TriggerBox_TriggerOnce(a0)
	jsr TriggerBoxLoadGfx
	add.l #TriggerBox_Struct_Size, a0
























	rts

