; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   **AUTOGENERATED WITH BEEHIVE** - the complete art tool for SEGA Mega Drive
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   http://www.bigevilcorporation.co.uk
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
;   Beehive and SEGA Genesis Framework (c) Matt Phillips 2015
; == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==


L4A1_Leaf_count equ 0x0

L4A1_Echo_count equ 0x1
L4A1_Echo_2_idx	equ 0x0

	IFND FINAL
L4A1_Echo_2_name	dc.b "L4A1_Echo_2",0
	even
	ENDIF

L4A1_Nymn_count equ 0x1
L4A1_Nymn_1_idx	equ 0x0

	IFND FINAL
L4A1_Nymn_1_name	dc.b "L4A1_Nymn_1",0
	even
	ENDIF

L4A1_BouncePlant_count equ 0x0

L4A1_Log_count equ 0x0

L4A1_DjakkCage_count equ 0x0

L4A1_Monster_count equ 0x0

L4A1_Boulder_count equ 0x0

L4A1_Firefly_count equ 0x0

L4A1_FuzzlCage_count equ 0x0

L4A1_Fuzzl_count equ 0x1
L4A1_FuzzlGlide1_idx	equ 0x0

	IFND FINAL
L4A1_FuzzlGlide1_name	dc.b "L4A1_FuzzlGlide1",0
	even
	ENDIF

L4A1_Stone_count equ 0x0

L4A1_Nest_count equ 0x1
L4A1_Nest_4_idx	equ 0x0

	IFND FINAL
L4A1_Nest_4_name	dc.b "L4A1_Nest_4",0
	even
	ENDIF

L4A1_Flue_count equ 0x0

L4A1_TriggerBox_count equ 0x0

L4A1_Checkpoint_count equ 0x0

L4A1_WaterBody_count equ 0x0

L4A1_Location_count equ 0x0

L4A1_Deathbox_count equ 0x0

L4A1_Lift_count equ 0x0

L4A1_Crate_count equ 0x0

L4A1_Generator_count equ 0x0

L4A1_Cogs_count equ 0x0

L4A1_Bridge_count equ 0x0

L4A1_Button_count equ 0x0

L4A1_Wyrm_count equ 0x0

L4A1_AIMarker_count equ 0x0

L4A1_Cart_count equ 0x0

L4A1_Pillar_count equ 0x0



L4A1_LoadGameObjects:
	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Leaf_Struct_Size*L4A1_Leaf_count)
	move.l a1, EntityPoolStart_Leaf
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Echo_Struct_Size*L4A1_Echo_count)
	move.l a1, EntityPoolStart_Echo
	move.l a1, a0
	POPL   a1

	jsr EchoInit
	move.l #0x00c00000, Entity_WorldPosX(a0)
	move.l #0x02e00000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L4A1_Echo_2_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xb, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr EchoLoadGfx
	add.l #Echo_Struct_Size, a0

	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Nymn_Struct_Size*L4A1_Nymn_count)
	move.l a1, EntityPoolStart_Nymn
	move.l a1, a0
	POPL   a1

	jsr NymnInit
	move.l #0x00e00000, Entity_WorldPosX(a0)
	move.l #0x02e00000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L4A1_Nymn_1_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xb, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr NymnLoadGfx
	add.l #Nymn_Struct_Size, a0

	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(BouncePlant_Struct_Size*L4A1_BouncePlant_count)
	move.l a1, EntityPoolStart_BouncePlant
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Log_Struct_Size*L4A1_Log_count)
	move.l a1, EntityPoolStart_Log
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(DjakkCage_Struct_Size*L4A1_DjakkCage_count)
	move.l a1, EntityPoolStart_DjakkCage
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Monster_Struct_Size*L4A1_Monster_count)
	move.l a1, EntityPoolStart_Monster
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Boulder_Struct_Size*L4A1_Boulder_count)
	move.l a1, EntityPoolStart_Boulder
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Firefly_Struct_Size*L4A1_Firefly_count)
	move.l a1, EntityPoolStart_Firefly
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(FuzzlCage_Struct_Size*L4A1_FuzzlCage_count)
	move.l a1, EntityPoolStart_FuzzlCage
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Fuzzl_Struct_Size*L4A1_Fuzzl_count)
	move.l a1, EntityPoolStart_Fuzzl
	move.l a1, a0
	POPL   a1

	jsr FuzzlInit
	move.l #0x09680000, Entity_WorldPosX(a0)
	move.l #0x02e80000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L4A1_FuzzlGlide1_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0x10, d0
	MEMCPYB a2,a3,d0
	ENDIF
	move.b #ColourYellow, Fuzzl_Colour(a0)
	jsr FuzzlLoadGfx
	add.l #Fuzzl_Struct_Size, a0

	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Stone_Struct_Size*L4A1_Stone_count)
	move.l a1, EntityPoolStart_Stone
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Nest_Struct_Size*L4A1_Nest_count)
	move.l a1, EntityPoolStart_Nest
	move.l a1, a0
	POPL   a1

	jsr NestInit
	move.l #0x07400000, Entity_WorldPosX(a0)
	move.l #0x03580000, Entity_WorldPosY(a0)
	IFND FINAL
	lea L4A1_Nest_4_name, a3
	move.l a0, a2
	add.l #Entity_DebugName, a2
	move.l #0xb, d0
	MEMCPYB a2,a3,d0
	ENDIF
	jsr NestLoadGfx
	add.l #Nest_Struct_Size, a0

	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Flue_Struct_Size*L4A1_Flue_count)
	move.l a1, EntityPoolStart_Flue
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(TriggerBox_Struct_Size*L4A1_TriggerBox_count)
	move.l a1, EntityPoolStart_TriggerBox
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Checkpoint_Struct_Size*L4A1_Checkpoint_count)
	move.l a1, EntityPoolStart_Checkpoint
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(WaterBody_Struct_Size*L4A1_WaterBody_count)
	move.l a1, EntityPoolStart_WaterBody
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Location_Struct_Size*L4A1_Location_count)
	move.l a1, EntityPoolStart_Location
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Deathbox_Struct_Size*L4A1_Deathbox_count)
	move.l a1, EntityPoolStart_Deathbox
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Lift_Struct_Size*L4A1_Lift_count)
	move.l a1, EntityPoolStart_Lift
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Crate_Struct_Size*L4A1_Crate_count)
	move.l a1, EntityPoolStart_Crate
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Generator_Struct_Size*L4A1_Generator_count)
	move.l a1, EntityPoolStart_Generator
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Cogs_Struct_Size*L4A1_Cogs_count)
	move.l a1, EntityPoolStart_Cogs
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Bridge_Struct_Size*L4A1_Bridge_count)
	move.l a1, EntityPoolStart_Bridge
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Button_Struct_Size*L4A1_Button_count)
	move.l a1, EntityPoolStart_Button
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Wyrm_Struct_Size*L4A1_Wyrm_count)
	move.l a1, EntityPoolStart_Wyrm
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(AIMarker_Struct_Size*L4A1_AIMarker_count)
	move.l a1, EntityPoolStart_AIMarker
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Cart_Struct_Size*L4A1_Cart_count)
	move.l a1, EntityPoolStart_Cart
	move.l a1, a0
	POPL   a1


	PUSHL  a1
	RAMPOOL_ALLOC Pool_Entities, #(Pillar_Struct_Size*L4A1_Pillar_count)
	move.l a1, EntityPoolStart_Pillar
	move.l a1, a0
	POPL   a1


	rts

